<?php

namespace DoctrineORMModule\Proxy\__CG__\OAuth\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class OAuthSession extends \OAuth\Entity\OAuthSession implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function getClient_id()
    {
        $this->__load();
        return parent::getClient_id();
    }

    public function getRedirect_url()
    {
        $this->__load();
        return parent::getRedirect_url();
    }

    public function getOwner_type()
    {
        $this->__load();
        return parent::getOwner_type();
    }

    public function getOwner_id()
    {
        $this->__load();
        return parent::getOwner_id();
    }

    public function getAuth_code()
    {
        $this->__load();
        return parent::getAuth_code();
    }

    public function getAccess_token()
    {
        $this->__load();
        return parent::getAccess_token();
    }

    public function getRefresh_token()
    {
        $this->__load();
        return parent::getRefresh_token();
    }

    public function getAccess_token_expires()
    {
        $this->__load();
        return parent::getAccess_token_expires();
    }

    public function getStage()
    {
        $this->__load();
        return parent::getStage();
    }

    public function getFirst_requested()
    {
        $this->__load();
        return parent::getFirst_requested();
    }

    public function getLast_update()
    {
        $this->__load();
        return parent::getLast_update();
    }

    public function getScopes()
    {
        $this->__load();
        return parent::getScopes();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function setClient_id($client_id)
    {
        $this->__load();
        return parent::setClient_id($client_id);
    }

    public function setRedirect_url($redirect_url)
    {
        $this->__load();
        return parent::setRedirect_url($redirect_url);
    }

    public function setOwner_type($owner_type)
    {
        $this->__load();
        return parent::setOwner_type($owner_type);
    }

    public function setOwner_id($owner_id)
    {
        $this->__load();
        return parent::setOwner_id($owner_id);
    }

    public function setAuth_code($auth_code)
    {
        $this->__load();
        return parent::setAuth_code($auth_code);
    }

    public function setAccess_token($access_token)
    {
        $this->__load();
        return parent::setAccess_token($access_token);
    }

    public function setRefresh_token($refresh_token)
    {
        $this->__load();
        return parent::setRefresh_token($refresh_token);
    }

    public function setAccess_token_expires($access_token_expires)
    {
        $this->__load();
        return parent::setAccess_token_expires($access_token_expires);
    }

    public function setStage($stage)
    {
        $this->__load();
        return parent::setStage($stage);
    }

    public function setFirst_requested($first_requested)
    {
        $this->__load();
        return parent::setFirst_requested($first_requested);
    }

    public function setLast_update($last_update)
    {
        $this->__load();
        return parent::setLast_update($last_update);
    }

    public function setScopes($scopes)
    {
        $this->__load();
        return parent::setScopes($scopes);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'client_id', 'redirect_url', 'owner_type', 'owner_id', 'auth_code', 'access_token', 'refresh_token', 'access_token_expires', 'stage', 'first_requested', 'last_update', 'scopes');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}