<?php

namespace DoctrineORMModule\Proxy\__CG__\Gig\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Gig extends \Gig\Entity\Gig implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function getInstructions()
    {
        $this->__load();
        return parent::getInstructions();
    }

    public function getTags()
    {
        $this->__load();
        return parent::getTags();
    }

    public function getImages()
    {
        $this->__load();
        return parent::getImages();
    }

    public function getTime_to_complete()
    {
        $this->__load();
        return parent::getTime_to_complete();
    }

    public function getPrice()
    {
        $this->__load();
        return parent::getPrice();
    }

    public function getExtras()
    {
        $this->__load();
        return parent::getExtras();
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function setInstructions($instructions)
    {
        $this->__load();
        return parent::setInstructions($instructions);
    }

    public function setTags($tags)
    {
        $this->__load();
        return parent::setTags($tags);
    }

    public function setImages($images)
    {
        $this->__load();
        return parent::setImages($images);
    }

    public function setTime_to_complete($time_to_complete)
    {
        $this->__load();
        return parent::setTime_to_complete($time_to_complete);
    }

    public function setPrice($price)
    {
        $this->__load();
        return parent::setPrice($price);
    }

    public function setExtras($extras)
    {
        $this->__load();
        return parent::setExtras($extras);
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getFavorited_users()
    {
        $this->__load();
        return parent::getFavorited_users();
    }

    public function setFavorited_users($favorited_users)
    {
        $this->__load();
        return parent::setFavorited_users($favorited_users);
    }

    public function getOrders()
    {
        $this->__load();
        return parent::getOrders();
    }

    public function setOrders($orders)
    {
        $this->__load();
        return parent::setOrders($orders);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setUser($user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function getCreate_at()
    {
        $this->__load();
        return parent::getCreate_at();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'title', 'description', 'instructions', 'day_to_complete', 'price', 'status', 'user_id', 'id', 'create_at', 'tags', 'images', 'videos', 'extras', 'favorited_users', 'orders', 'comments', 'user');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}